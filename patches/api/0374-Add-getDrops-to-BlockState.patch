From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: MelnCat <melncatuwu@gmail.com>
Date: Fri, 12 Aug 2022 23:24:53 -0700
Subject: [PATCH] Add getDrops to BlockState

Originally added isPreferredTool to BlockData but
upstream added that.

diff --git a/src/main/java/org/bukkit/block/BlockState.java b/src/main/java/org/bukkit/block/BlockState.java
index c439cf0bb6c50db2b3304c60e50046f096392f9f..19837f0eae67854f48e777bc7d4a13b53fa4b436 100644
--- a/src/main/java/org/bukkit/block/BlockState.java
+++ b/src/main/java/org/bukkit/block/BlockState.java
@@ -243,5 +243,41 @@ public interface BlockState extends Metadatable {
      * @return true if collidable
      */
     boolean isCollidable();
+
+    /**
+     * Returns an immutable list of items which would drop by destroying this block state.
+     *
+     * @return an immutable list of dropped items for the block state
+     * @throws IllegalStateException if this block state is not placed
+     */
+    @NotNull
+    default java.util.@org.jetbrains.annotations.Unmodifiable Collection<org.bukkit.inventory.ItemStack> getDrops() {
+        return this.getDrops(null);
+    }
+
+    /**
+     * Returns an immutable list of items which would drop by destroying this block state
+     * with a specific tool
+     *
+     * @param tool The tool or item in hand used for digging
+     * @return an immutable list of dropped items for the block state
+     * @throws IllegalStateException if this block state is not placed
+     */
+    @NotNull
+    default java.util.@org.jetbrains.annotations.Unmodifiable Collection<org.bukkit.inventory.ItemStack> getDrops(@Nullable org.bukkit.inventory.ItemStack tool) {
+        return this.getDrops(tool, null);
+    }
+
+    /**
+     * Returns an immutable list of items which would drop by the entity destroying this
+     * block state with a specific tool
+     *
+     * @param tool The tool or item in hand used for digging
+     * @param entity the entity destroying the block
+     * @return an immutable list of dropped items for the block state
+     * @throws IllegalStateException if this block state is not placed
+     */
+    @NotNull
+    java.util.@org.jetbrains.annotations.Unmodifiable Collection<org.bukkit.inventory.ItemStack> getDrops(@Nullable org.bukkit.inventory.ItemStack tool, @Nullable org.bukkit.entity.Entity entity);
     // Paper end
 }
